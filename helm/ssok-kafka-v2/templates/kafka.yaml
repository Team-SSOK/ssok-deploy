# Strimzi Operator 설치 
# kubectl create namespace kafka
# kubectl create -f 'https://strimzi.io/install/latest?namespace=kafka' -n kafka

# 자동으로 생성되는 서비스들
# ssok-cluster-kafka-bootstrap          ClusterIP    # 내부 bootstrap
# ssok-cluster-kafka-brokers            ClusterIP    # headless 서비스  
# ssok-cluster-kafka-external-0         NodePort     # 브로커 0 외부 접근
# ssok-cluster-kafka-external-1         NodePort     # 브로커 1 외부 접근

# 접근법 (둘중 하나 선택)
# ssok-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092 # Bootstrap 서비스 
# ssok-cluster-kafka-brokers.kafka.svc.cluster.local:9092 # Brokers 서비스 - headless
---
# Kafka 클러스터 정의
apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: ssok-cluster
  namespace: kafka
  annotations:
    strimzi.io/kraft: enabled
spec:
  # KRaft 모드 설정
  kafka:
    version: 3.6.0
    replicas: 2  # 브로커 2개
    
    # KRaft 모드 활성화
    metadataVersion: 3.6-IV2
    
    listeners:
      # 내부 통신용
      - name: plain
        port: 9092
        type: internal
        tls: false
      # 외부 접근용 (NodePort)
      - name: external
        port: 9094
        type: nodeport
        tls: false
        configuration:
          brokers:
            - broker: 0
              nodePort: 31001
            - broker: 1  
              nodePort: 31002
          
    config:
      # 기본 설정 (브로커 2개 환경 최적화)
      offsets.topic.replication.factor: 2
      transaction.state.log.replication.factor: 2
      transaction.state.log.min.isr: 1         # 가용성을 위해 1로 설정
      default.replication.factor: 2
      min.insync.replicas: 1                   # 가용성을 위해 1로 설정
      inter.broker.protocol.version: "3.6"
      
    storage:
      type: persistent-claim
      size: 10Gi
    
    # 리소스 제한
    resources:
      requests:
        memory: 1Gi
        cpu: 500m
      limits:
        memory: 2Gi
        cpu: 1000m

  entityOperator:
    topicOperator: {}
    userOperator: {}