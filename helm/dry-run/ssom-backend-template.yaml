---
# Source: ssom-backend/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ssom-backend-secrets
  namespace: ssom
  labels:
    helm.sh/chart: ssom-backend-0.1.0
    app.kubernetes.io/name: ssom-backend
    app.kubernetes.io/instance: ssom-backend
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  GITHUB_WEBHOOK_SECRET: ""
  JWT_SECRET: ""
  LLM_API_URL: ""
  OPENSEARCH_API_URL: ""
  OPENSEARCH_HOST: ""
  OPENSEARCH_PORT: ""
  SPRING_DATASOURCE_PASSWORD: ""
  SPRING_DATASOURCE_URL: ""
  SPRING_DATASOURCE_USERNAME: ""
  SPRING_DATA_REDIS_HOST: ""
  SPRING_DATA_REDIS_PORT: ""
---
# Source: ssom-backend/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ssom-backend-cm
  namespace: ssom
  labels:
    helm.sh/chart: ssom-backend-0.1.0
    app.kubernetes.io/name: ssom-backend
    app.kubernetes.io/instance: ssom-backend
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
data:
  BIOMETRIC_DEVICE_BLOCK_TIME_MINUTES: "30"
  BIOMETRIC_FAILURE_RESET_TIME_MINUTES: "30"
  BIOMETRIC_MAX_BIOMETRIC_HASH_LENGTH: "500"
  BIOMETRIC_MAX_DEVICE_INFO_LENGTH: "1000"
  BIOMETRIC_MAX_FAILURE_ATTEMPTS: "3"
  BIOMETRIC_TIMESTAMP_TOLERANCE_MS: "300000"
  GITHUB_API_OWNER: Team-SSOK
  GITHUB_API_REPOSITORY: ssok-backend
  JWT_ACCESS_TOKEN_VALIDITY_IN_SECONDS: "1800"
  JWT_REFRESH_TOKEN_VALIDITY_IN_SECONDS: "604800"
  JWT_SSE_TOKEN_VALIDITY_IN_SECONDS: "43200"
  MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: health,info,prometheus
  MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED: "true"
  OPENSEARCH_CONNECT_TIMEOUT: "10"
  OPENSEARCH_RESPONSE_TIMEOUT: "30"
  OPENSEARCH_SCHEME: http
  SECURITY_WHITELIST_0: /api/users/login
  SECURITY_WHITELIST_1: /api/users/refresh
  SECURITY_WHITELIST_2: /api/users/signup
  SECURITY_WHITELIST_3: /api/users/phone
  SECURITY_WHITELIST_4: /api/users/phone/verify
  SECURITY_WHITELIST_5: /api/issues/webhook/github
  SECURITY_WHITELIST_6: /actuator/prometheus
  SECURITY_WHITELIST_7: /swagger-ui/**
  SECURITY_WHITELIST_8: /v3/api-docs/**
  SECURITY_WHITELIST_9: /error
  SECURITY_WHITELIST_10: /
  SECURITY_WHITELIST_11: /api/issues/github
  SERVER_PORT: "8080"
  SPRING_APPLICATION_NAME: ssom-backend
  SPRING_DATA_REDIS_LETTUCE_POOL_MAX_ACTIVE: "8"
  SPRING_DATA_REDIS_LETTUCE_POOL_MAX_IDLE: "8"
  SPRING_DATA_REDIS_LETTUCE_POOL_MAX_WAIT: -1ms
  SPRING_DATA_REDIS_LETTUCE_POOL_MIN_IDLE: "0"
  SPRING_DATA_REDIS_LETTUCE_POOL_TIME_BETWEEN_EVICTION_RUNS: 60s
  SPRING_DATA_REDIS_TIMEOUT: 2000ms
  SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
  SPRING_DATASOURCE_HIKARI_CONNECTION_TIMEOUT: "20000"
  SPRING_DATASOURCE_HIKARI_IDLE_TIMEOUT: "300000"
  SPRING_DATASOURCE_HIKARI_LEAK_DETECTION_THRESHOLD: "60000"
  SPRING_DATASOURCE_HIKARI_MAX_LIFETIME: "1200000"
  SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE: "20"
  SPRING_DATASOURCE_HIKARI_MINIMUM_IDLE: "5"
  SPRING_DATASOURCE_HIKARI_VALIDATION_TIMEOUT: "3000"
  SPRING_JPA_HIBERNATE_DDL_AUTO: update
  SPRING_JPA_PROPERTIES_HIBERNATE_BATCH_VERSIONED_DATA: "true"
  SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MySQL8Dialect
  SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: "true"
  SPRING_JPA_PROPERTIES_HIBERNATE_JDBC_BATCH_SIZE: "20"
  SPRING_JPA_PROPERTIES_HIBERNATE_JDBC_TIME_ZONE: Asia/Seoul
  SPRING_JPA_PROPERTIES_HIBERNATE_ORDER_INSERTS: "true"
  SPRING_JPA_PROPERTIES_HIBERNATE_ORDER_UPDATES: "true"
  SPRING_JPA_PROPERTIES_HIBERNATE_SHOW_SQL: "true"
  SPRING_JPA_PROPERTIES_HIBERNATE_USE_SQL_COMMENTS: "true"
  SPRING_JPA_SHOW_SQL: "true"
  SPRING_PROFILES_ACTIVE: dev
---
# Source: ssom-backend/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ssom-backend
  namespace: ssom
  labels:
    helm.sh/chart: ssom-backend-0.1.0
    app.kubernetes.io/name: ssom-backend
    app.kubernetes.io/instance: ssom-backend
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  selector:
    app.kubernetes.io/name: ssom-backend
    app.kubernetes.io/instance: ssom-backend
  sessionAffinity: None
  ports:
    - name: web       # ← 반드시 포트 이름 지정
      port: 80
      targetPort: 8080
    - name: api
      port: 8080 # 다른 pod exec 접속후 curl http://ssok-bank-service:8080 로 접근
      targetPort: 8080 # nginx의 타겟 포트
      nodePort: 31105  # 외부에서 http://kudong.kr:55027
---
# Source: ssom-backend/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ssom-backend
  namespace: ssom
  labels:
    helm.sh/chart: ssom-backend-0.1.0
    app.kubernetes.io/name: ssom-backend
    app.kubernetes.io/instance: ssom-backend
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ssom-backend
      app.kubernetes.io/instance: ssom-backend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ssom-backend
        app.kubernetes.io/instance: ssom-backend
    spec:
      containers:
      - name: ssom-backend
        image: "kudong/ssom-backend:latest"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        envFrom:
          - configMapRef:
              name: ssom-backend-cm
          - secretRef:
              name: ssom-backend-secrets
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 20
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 180
          periodSeconds: 20
        resources:
---
# Source: ssom-backend/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ssom-backend-hpa
  namespace: ssom
  labels:
    helm.sh/chart: ssom-backend-0.1.0
    app.kubernetes.io/name: ssom-backend
    app.kubernetes.io/instance: ssom-backend
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ssom-backend
  minReplicas: 1
  maxReplicas: 3
  metrics:
    - resource:
        name: cpu
        target:
          averageUtilization: 90
          type: Utilization
      type: Resource
  behavior:
    scaleDown:
      policies:
      - periodSeconds: 30
        type: Percent
        value: 50
      stabilizationWindowSeconds: 300
    scaleUp:
      policies:
      - periodSeconds: 15
        type: Percent
        value: 100
      - periodSeconds: 15
        type: Pods
        value: 2
      selectPolicy: Max
      stabilizationWindowSeconds: 0
