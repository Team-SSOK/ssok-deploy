---
# Source: ssok-bank/templates/hpa.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: ssok-bank-pdb
  namespace: bank
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ssok-bank
      app.kubernetes.io/instance: ssok-bank
---
# Source: ssok-bank/templates/batch.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ssok-bank-discord-webhook
  namespace: bank
type: Opaque
stringData:
  webhook-url: https://discord.com/api/webhooks/1377886188312068146/eFtja7Ax7h84bD9z5CZhm7jligL1wDIRRLvQgr-UnxnACEUSkyI4Gm9NsenVFwnwKnLK
---
# Source: ssok-bank/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ssok-bank-db-secrets
  namespace: bank
  labels:
    helm.sh/chart: ssok-bank-0.1.0
    app.kubernetes.io/name: ssok-bank
    app.kubernetes.io/instance: ssok-bank
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  DB_PASSWORD: dGxkcHNkcHRt
  DB_USERNAME: bGdjbnM=
---
# Source: ssok-bank/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ssok-bank-cm
  namespace: bank
  labels:
    helm.sh/chart: ssok-bank-0.1.0
    app.kubernetes.io/name: ssok-bank
    app.kubernetes.io/instance: ssok-bank
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
data:
  DB_URL: jdbc:mariadb://172.21.1.22:3306/moni?useUnicode=true&characterEncoding=utf-8&serverTimeZone=Asia/Seoul
  ENCRYPTION_KEY: ss0k-bank-admin1
  KAFKA_BOOTSTRAP_SERVERS: broker.kafka.svc.cluster.local:9092
  KAFKA_TRUSTED_PACKAGES: kr.ssok.model
  SERVER_PORT: "8080"
---
# Source: ssok-bank/templates/fluentbit-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ssok-bank-fluent-bit-config
  namespace: bank
data:
  fluent-bit.conf: |
    [SERVICE]
        Flush         1
        Daemon        Off
        Log_Level     info
        Parsers_File  parsers.conf
    
    [INPUT]
        Name              tail
        Path              /var/log/ssok-bank.log
        Parser            json
        Tag               app.log 
        Refresh_Interval  5
        Mem_Buf_Limit     10MB
        Skip_Long_Lines   On
    
    [OUTPUT]
        Name              stdout
        Match             app.*
    
    [OUTPUT]
        Name              forward
        Match             app.*
        Host              fluentd-aggregator.logging.svc.cluster.local
        Port              24224
    
  parsers.conf: |
    [PARSER]
        Name              json
        Format            json
        Time_Key          time
        Time_Format       %Y-%m-%dT%H:%M:%S.%L
---
# Source: ssok-bank/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ssok-bank
  namespace: bank
  labels:
    helm.sh/chart: ssok-bank-0.1.0
    app.kubernetes.io/name: ssok-bank
    app.kubernetes.io/instance: ssok-bank
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  selector:
    app.kubernetes.io/name: ssok-bank
    app.kubernetes.io/instance: ssok-bank
  sessionAffinity: None
  ports:
    - name: web       # ← 반드시 포트 이름 지정
      port: 80
      targetPort: 8080
    - name: api
      port: 8080 # 다른 pod exec 접속후 curl http://ssok-bank-service:8080 로 접근
      targetPort: 8080 # nginx의 타겟 포트
      nodePort: 31000  # 외부에서 http://kudong.kr:55027
---
# Source: ssok-bank/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ssok-bank
  namespace: bank
  labels:
    helm.sh/chart: ssok-bank-0.1.0
    app.kubernetes.io/name: ssok-bank
    app.kubernetes.io/instance: ssok-bank
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  revisionHistoryLimit: 1
  # replicas:  # HPA로 대체
  selector:
    matchLabels:
      app.kubernetes.io/name: ssok-bank
      app.kubernetes.io/instance: ssok-bank
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ssok-bank
        app.kubernetes.io/instance: ssok-bank
    spec:
      containers:
      - name: ssok-bank
        image: "kudong/ssok-bank:latest"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        envFrom:
          - configMapRef:
              name: ssok-bank-cm
          - secretRef:
              name: ssok-bank-db-secrets
        volumeMounts:
          - name: varlog
            mountPath: /var/log
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 20
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 180
          periodSeconds: 20
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 200m
            memory: 512Mi

      - name: fluent-bit
        image: cr.fluentbit.io/fluent/fluent-bit:4.0.2
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - name: varlog
            mountPath: /var/log
          - name: fluent-bit-config
            mountPath: /fluent-bit/etc
        resources:
          limits:
            memory: 100Mi
            cpu: 100m

      volumes:
        - name: varlog
          emptyDir: {}
        - name: fluent-bit-config
          configMap:
            name: ssok-bank-fluent-bit-config
---
# Source: ssok-bank/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ssok-bank-hpa
  namespace: bank
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ssok-bank
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 90
        type: Utilization
    type: Resource
  behavior:
    scaleDown:
      policies:
      - periodSeconds: 30
        type: Percent
        value: 50
      stabilizationWindowSeconds: 300
    scaleUp:
      policies:
      - periodSeconds: 15
        type: Percent
        value: 100
      - periodSeconds: 15
        type: Pods
        value: 2
      selectPolicy: Max
      stabilizationWindowSeconds: 0
---
# Source: ssok-bank/templates/batch.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: ssok-bank-discord-notification
  namespace: bank
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
    argocd.argoproj.io/sync-wave: "10"  # 모든 배포 완료 후
spec:
  template:
    spec:
      containers:
      - name: discord-notify
        image: curlimages/curl:latest
        env:
        - name: WEBHOOK_URL
          valueFrom:
            secretKeyRef:
              name: ssok-bank-discord-webhook
              key: webhook-url
        command:
        - sh
        - -c
        - |
          DEPLOY_TIME=$(date "+%Y-%m-%d %H:%M:%S")
          curl -H "Content-Type: application/json" \
               -X POST \
               -d "{
                 \"embeds\": [{
                   \"title\": \"✅ [DEV] ssok-bank 배포 성공\",
                   \"description\": \"모든 컴포넌트가 정상적으로 배포되었습니다.\",
                   \"color\": 65280,
                   \"fields\": [
                     {
                       \"name\": \"🏦 애플리케이션\",
                       \"value\": \"ssok-bank\",
                       \"inline\": true
                     },
                     {
                       \"name\": \"📦 네임스페이스\",
                       \"value\": \"bank\", 
                       \"inline\": true
                     },
                     {
                       \"name\": \"⏰ 배포 시간\",
                       \"value\": \"$DEPLOY_TIME\",
                       \"inline\": false
                     }
                   ],
                   \"footer\": {
                     \"text\": \"ArgoCD PostSync Hook\"
                   }
                 }]
               }" \
               "$WEBHOOK_URL"
      restartPolicy: Never
      serviceAccountName: default  # kubectl 권한 필요 시 별도 ServiceAccount 생성
---
# Source: ssok-bank/templates/batch.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: ssok-bank-discord-failure-notification
  namespace: bank
  annotations:
    argocd.argoproj.io/hook: SyncFail
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
    argocd.argoproj.io/sync-wave: "10"  # 모든 배포 완료 후
spec:
  template:
    spec:
      containers:
      - name: discord-notify
        image: curlimages/curl:latest
        env:
        - name: WEBHOOK_URL
          valueFrom:
            secretKeyRef:
              name: ssok-bank-discord-webhook
              key: webhook-url
        command:
        - sh
        - -c
        - |
          DEPLOY_TIME=$(date "+%Y-%m-%d %H:%M:%S")
          curl -H "Content-Type: application/json" \
               -X POST \
               -d "{
                 \"embeds\": [{
                   \"title\": \"❌ [DEV] ssok-bank 배포 실패\",
                   \"description\": \"ssok-bank 배포 중 오류가 발생했습니다.\",
                   \"color\": 16711680,
                   \"fields\": [
                     {
                       \"name\": \"🏦 애플리케이션\",
                       \"value\": \"ssok-bank\",
                       \"inline\": true
                     },
                     {
                       \"name\": \"📦 네임스페이스\",
                       \"value\": \"bank\", 
                       \"inline\": true
                     },
                     {
                       \"name\": \"⏰ 시간\",
                       \"value\": \"$DEPLOY_TIME\",
                       \"inline\": false
                     }
                   ]
                 }]
               }" \
               "$WEBHOOK_URL"
      restartPolicy: Never
