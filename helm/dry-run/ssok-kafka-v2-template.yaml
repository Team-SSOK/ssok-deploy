---
# Source: ssok-kafka-v2/templates/pv.yaml
# StorageClass 정의 (manual provisioning용)
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: kafka-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Retain
---
# Source: ssok-kafka-v2/templates/pv.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: kafka-pv-0
  labels:
    type: local
    strimzi.io/cluster: ssok-cluster
    strimzi.io/nodepool: kafka-node
    strimzi.io/pod-index: "0"
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: kafka-storage
  hostPath:
    path: /mnt/kafka/ssok-cluster/kafka-node-0
    type: DirectoryOrCreate
  # nodeAffinity:
  #   required:
  #     nodeSelectorTerms:
  #     - matchExpressions:
  #       - key: kubernetes.io/hostname
  #         operator: Exists
---
# Source: ssok-kafka-v2/templates/pv.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: kafka-pv-1
  labels:
    type: local
    strimzi.io/cluster: ssok-cluster
    strimzi.io/nodepool: kafka-node
    strimzi.io/pod-index: "1"
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: kafka-storage
  hostPath:
    path: /mnt/kafka/ssok-cluster/kafka-node-1
    type: DirectoryOrCreate
  # nodeAffinity:
  #   required:
  #     nodeSelectorTerms:
  #     - matchExpressions:
  #       - key: kubernetes.io/hostname
  #         operator: Exists
---
# Source: ssok-kafka-v2/templates/pv.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: kafka-pv-2
  labels:
    type: local
    strimzi.io/cluster: ssok-cluster
    strimzi.io/nodepool: kafka-node
    strimzi.io/pod-index: "2"
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: kafka-storage
  hostPath:
    path: /mnt/kafka/ssok-cluster/kafka-node-2
    type: DirectoryOrCreate
  # nodeAffinity:
  #   required:
  #     nodeSelectorTerms:
  #     - matchExpressions:
  #       - key: kubernetes.io/hostname
  #         operator: Exists
---
# Source: ssok-kafka-v2/templates/kafka.yaml
# Strimzi Operator 설치 
# kubectl create namespace kafka
# kubectl create -f 'https://strimzi.io/install/latest?namespace=kafka' -n kafka

# 자동으로 생성되는 서비스들
# ssok-cluster-kafka-bootstrap          ClusterIP    # 내부 bootstrap
# ssok-cluster-kafka-brokers            ClusterIP    # headless 서비스  
# ssok-cluster-kafka-node-0         NodePort     # 브로커 0 외부 접근
# ssok-cluster-kafka-node-1         NodePort     # 브로커 1 외부 접근
# ssok-cluster-kafka-node-2         NodePort     # 브로커 1 외부 접근

# 접근법 (둘중 하나 선택)
# ssok-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092 # Bootstrap 서비스 
# ssok-cluster-kafka-brokers.kafka.svc.cluster.local:9092 # Brokers 서비스 - headless

# 개별 접근 (Headless)
# ssok-cluster-kafka-node-0.ssok-cluster-kafka-brokers:9092
# ssok-cluster-kafka-node-1.ssok-cluster-kafka-brokers:9092
# ssok-cluster-kafka-node-2.ssok-cluster-kafka-brokers:9092

# https://github.com/strimzi/strimzi-kafka-operator/tree/main/examples/kafka 참고
# https://strimzi.io/quickstarts/
---
# Source: ssok-kafka-v2/templates/kafka.yaml
# Kafka 클러스터 정의
apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: ssok-cluster
  namespace: kafka
  annotations:
    strimzi.io/node-pools: enabled
    strimzi.io/kraft: enabled
spec:
  # KRaft 모드 설정
  kafka:
    version: 4.0.0
    metadataVersion: 4.0-IV3
    
    listeners:
      # 내부 통신용
      - name: plain
        port: 9092
        type: internal
        tls: false
      # 외부 접근용 (NodePort)
      - name: external
        port: 9094
        type: nodeport
        tls: false
        configuration:
          brokers:
            - broker: 0
              nodePort: 31201
            - broker: 1  
              nodePort: 31202
            - broker: 2
              nodePort: 31203
          
    config:
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      default.replication.factor: 3
      min.insync.replicas: 2

  entityOperator:
    topicOperator: {}
    userOperator: {}
---
# Source: ssok-kafka-v2/templates/pool.yaml
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaNodePool
metadata:
  name: kafka-node
  namespace: kafka
  labels:
    strimzi.io/cluster: ssok-cluster
spec:
  replicas: 3
  roles:
    - controller
    - broker
  storage:
    type: jbod
    volumes:
      - id: 0
        type: persistent-claim
        size: 2Gi
        deleteClaim: false
        kraftMetadata: shared  
        class: kafka-storage
  # 리소스 설정      
  # resources:
  #   requests:
  #     memory: 1Gi
  #     cpu: 500m
  #   limits:
  #     memory: 2Gi
  #     cpu: 1000m

  # Pod Anti-Affinity 설정
  # template:
  #   pod:
  #     affinity:
  #       podAntiAffinity:
  #         requiredDuringSchedulingIgnoredDuringExecution:
  #           - labelSelector:
  #               matchLabels:
  #                 strimzi.io/cluster: ssok-cluster
  #                 strimzi.io/kind: Kafka
  #             topologyKey: kubernetes.io/hostname
