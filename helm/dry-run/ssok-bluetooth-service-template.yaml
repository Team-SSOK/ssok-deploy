---
# Source: ssok-bluetooth-service/templates/batch.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ssok-bluetooth-service-discord-webhook
  namespace: ssok
type: Opaque
stringData:
  webhook-url: https://discord.com/api/webhooks/1377886188312068146/eFtja7Ax7h84bD9z5CZhm7jligL1wDIRRLvQgr-UnxnACEUSkyI4Gm9NsenVFwnwKnLK
---
# Source: ssok-bluetooth-service/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ssok-bluetooth-service
  namespace: ssok
  labels:
    app.kubernetes.io/name: ssok-bluetooth-service
    app.kubernetes.io/instance: ssok-bluetooth-service
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  SPRING_DATA_REDIS_HOST: "localhost"
  SPRING_DATA_REDIS_PORT: "6379"
  EXTERNAL_ACCOUNT_SERVICE_URL: "http://localhost"
  EXTERNAL_USER_SERVICE_URL: "http://localhost"
  BLUETOOTH_UUID_TTL_SECONDS: "86400"
---
# Source: ssok-bluetooth-service/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ssok-bluetooth-service
  namespace: ssok
  labels:
    app.kubernetes.io/name: ssok-bluetooth-service
    app.kubernetes.io/instance: ssok-bluetooth-service
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/managed-by: Helm
data:
  application.yml: |-
    feign:
      client:
        config:
          default:
            connectTimeout: 20000
            loggerLevel: full
            readTimeout: 20000
      hystrix:
        command:
          default:
            execution:
              isolation:
                thread:
                  timeoutInMilliseconds: 30000
    health:
      kubernetes:
        enabled: false
    management:
      endpoint:
        health:
          probes:
            enabled: true
          show-components: always
          show-details: always
      endpoints:
        web:
          exposure:
            include: health,info,prometheus
      prometheus:
        metrics:
          export:
            enabled: true
    server:
      port: 8080
    spring:
      application:
        name: ssok-bluetooth-service
      cloud:
        kubernetes:
          config:
            enabled: true
            name: ssok-bluetooth-service
            namespace: ssok
            sources:
            - name: ssok-bluetooth-service
          discovery:
            all-namespaces: false
          loadbalancer:
            mode: service
          reload:
            enabled: true
          secrets:
            enabled: false
      data:
        redis:
          host: ${SPRING_DATA_REDIS_HOST}
          port: ${SPRING_DATA_REDIS_PORT}
    external:
      account-service:
        url: ${EXTERNAL_ACCOUNT_SERVICE_URL}
      user-service:
        url: ${EXTERNAL_USER_SERVICE_URL}
    bluetooth:
      uuid-ttl-seconds: ${BLUETOOTH_UUID_TTL_SECONDS}
---
# Source: ssok-bluetooth-service/templates/fluentbit-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-config-bluetooth
  namespace: ssok
data:
  fluent-bit.conf: |-
    [SERVICE]
        Flush         1
        Daemon        Off
        Log_Level     info
        Parsers_File  parsers.conf
        HTTP_Server   On
        HTTP_Listen   0.0.0.0
        HTTP_Port     2020
    
    [INPUT]
        Name              tail
        Path              /var/log/ssok-bluetooth-service.log
        Parser            json
        Tag               bluetooth.log
        Refresh_Interval  5
        Mem_Buf_Limit     10MB
        Skip_Long_Lines   On
    
    [OUTPUT]
        Name              forward
        Match             bluetooth.*
        Host              fluentd-aggregator.logging.svc.cluster.local
        Port              24224
  parsers.conf: |-
    [PARSER]
        Name              json
        Format            json
        Time_Key          time
        Time_Format       %Y-%m-%dT%H:%M:%S.%L%z
---
# Source: ssok-bluetooth-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ssok-bluetooth-service
  namespace: ssok
  labels:
    app.kubernetes.io/name: ssok-bluetooth-service
    app.kubernetes.io/instance: ssok-bluetooth-service
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/name: ssok-bluetooth-service
    app.kubernetes.io/instance: ssok-bluetooth-service
  ports:
    - name: web
      port: 80
      targetPort: 8080
  type: ClusterIP
---
# Source: ssok-bluetooth-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ssok-bluetooth-service
  namespace: ssok
  labels:
    app.kubernetes.io/name: ssok-bluetooth-service
    app.kubernetes.io/instance: ssok-bluetooth-service
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/managed-by: Helm
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  revisionHistoryLimit: 1
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ssok-bluetooth-service
      app.kubernetes.io/instance: ssok-bluetooth-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ssok-bluetooth-service
        app.kubernetes.io/instance: ssok-bluetooth-service
    spec:
      serviceAccountName: ssok-bluetooth-service-sa
      containers:
        - name: ssok-bluetooth-service
          image: "kudong/ssok-bluetooth-service:latest"
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: ssok-bluetooth-service
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: varlog
              mountPath: /var/log
            - name: config-volume
              mountPath: /config
          env:
            - name: SPRING_CONFIG_LOCATION
              value: file:/config/application.yml
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 20
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 180
            periodSeconds: 20
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 512Mi

        - name: fluent-bit
          image: cr.fluentbit.io/fluent/fluent-bit:4.0.2
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: varlog
              mountPath: /var/log
            - name: fluent-bit-config
              mountPath: /fluent-bit/etc
          resources:
            limits:
              memory: 100Mi
              cpu: 100m

      volumes:
        - name: config-volume
          configMap:
            name: ssok-bluetooth-service
        - name: varlog
          emptyDir: {}
        - name: fluent-bit-config
          configMap:
            name: fluent-bit-config-bluetooth
---
# Source: ssok-bluetooth-service/templates/batch.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: ssok-bluetooth-service-discord-notification
  namespace: ssok
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
    argocd.argoproj.io/sync-wave: "10"  # Î™®Îì† Î∞∞Ìè¨ ÏôÑÎ£å ÌõÑ
spec:
  template:
    spec:
      containers:
      - name: discord-notify
        image: curlimages/curl:latest
        env:
        - name: WEBHOOK_URL
          valueFrom:
            secretKeyRef:
              name: ssok-bluetooth-service-discord-webhook
              key: webhook-url
        command:
        - sh
        - -c
        - |
          DEPLOY_TIME=$(date "+%Y-%m-%d %H:%M:%S")
          curl -H "Content-Type: application/json" \
               -X POST \
               -d "{
                 \"embeds\": [{
                   \"title\": \"‚úÖ [DEV] ssok-bluetooth-service Î∞∞Ìè¨ ÏÑ±Í≥µ\",
                   \"description\": \"Î™®Îì† Ïª¥Ìè¨ÎÑåÌä∏Í∞Ä Ï†ïÏÉÅÏ†ÅÏúºÎ°ú Î∞∞Ìè¨ÎêòÏóàÏäµÎãàÎã§.\",
                   \"color\": 65280,
                   \"fields\": [
                     {
                       \"name\": \"üè¶ Ïï†ÌîåÎ¶¨ÏºÄÏù¥ÏÖò\",
                       \"value\": \"ssok-bluetooth-service\",
                       \"inline\": true
                     },
                     {
                       \"name\": \"üì¶ ÎÑ§ÏûÑÏä§ÌéòÏù¥Ïä§\",
                       \"value\": \"ssok\", 
                       \"inline\": true
                     },
                     {
                       \"name\": \"‚è∞ Î∞∞Ìè¨ ÏãúÍ∞Ñ\",
                       \"value\": \"$DEPLOY_TIME\",
                       \"inline\": false
                     }
                   ],
                   \"footer\": {
                     \"text\": \"ArgoCD PostSync Hook\"
                   }
                 }]
               }" \
               "$WEBHOOK_URL"
      restartPolicy: Never
      serviceAccountName: default  # kubectl Í∂åÌïú ÌïÑÏöî Ïãú Î≥ÑÎèÑ ServiceAccount ÏÉùÏÑ±
---
# Source: ssok-bluetooth-service/templates/batch.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: ssok-bluetooth-service-discord-failure-notification
  namespace: ssok
  annotations:
    argocd.argoproj.io/hook: SyncFail
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
    argocd.argoproj.io/sync-wave: "10"  # Î™®Îì† Î∞∞Ìè¨ ÏôÑÎ£å ÌõÑ
spec:
  template:
    spec:
      containers:
      - name: discord-notify
        image: curlimages/curl:latest
        env:
        - name: WEBHOOK_URL
          valueFrom:
            secretKeyRef:
              name: ssok-bluetooth-service-discord-webhook
              key: webhook-url
        command:
        - sh
        - -c
        - |
          DEPLOY_TIME=$(date "+%Y-%m-%d %H:%M:%S")
          curl -H "Content-Type: application/json" \
               -X POST \
               -d "{
                 \"embeds\": [{
                   \"title\": \"‚ùå [DEV] ssok-bluetooth-service Î∞∞Ìè¨ Ïã§Ìå®\",
                   \"description\": \"ssok-bluetooth-service Î∞∞Ìè¨ Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.\",
                   \"color\": 16711680,
                   \"fields\": [
                     {
                       \"name\": \"üè¶ Ïï†ÌîåÎ¶¨ÏºÄÏù¥ÏÖò\",
                       \"value\": \"ssok-bluetooth-service\",
                       \"inline\": true
                     },
                     {
                       \"name\": \"üì¶ ÎÑ§ÏûÑÏä§ÌéòÏù¥Ïä§\",
                       \"value\": \"ssok\", 
                       \"inline\": true
                     },
                     {
                       \"name\": \"‚è∞ ÏãúÍ∞Ñ\",
                       \"value\": \"$DEPLOY_TIME\",
                       \"inline\": false
                     }
                   ]
                 }]
               }" \
               "$WEBHOOK_URL"
      restartPolicy: Never
