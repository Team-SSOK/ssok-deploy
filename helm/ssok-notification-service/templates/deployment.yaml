apiVersion: apps/v1
kind: Deployment
metadata:
  name: ssok-notification-service
  namespace: ssok
  labels:
    {{- include "ssok-notification-service.labels" . | nindent 4 }}
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  revisionHistoryLimit: 1
  {{- if not .Values.hpa.enabled }}
  replicas: 1
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "ssok-notification-service.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "ssok-notification-service.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      terminationGracePeriodSeconds: 60 # Kubernetes가 Pod를 강제로 죽이기 전에 얼마나 기다려줄지 정한다.
      serviceAccountName: ssok-notification-service-sa
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - secretRef:
                name: ssok-notification-service
          ports:
            - containerPort: {{ .Values.service.targetPort }}
          volumeMounts:
            - name: varlog
              mountPath: /var/log
            - name: config-volume
              mountPath: /config
          env:
            - name: SPRING_CONFIG_LOCATION
              value: file:/config/application.yml
          readinessProbe: # Pod가 트래픽 받을 준비 확인
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 45
            periodSeconds: 5 # 5 초마다 체크
          livenessProbe: # Pod가 살아있는지 확인 (죽은 Pod 재시작)
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 180
            periodSeconds: 30
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/sh
                - -c
                - |
                  sleep 10
          {{- if .Values.resources }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}

        - name: fluent-bit
          image: cr.fluentbit.io/fluent/fluent-bit:4.0.2
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: varlog
              mountPath: /var/log
            - name: fluent-bit-config
              mountPath: /fluent-bit/etc
          resources:
            limits:
              memory: 100Mi
              cpu: 100m

      volumes:
        - name: config-volume
          configMap:
            name: ssok-notification-service
        - name: varlog
          emptyDir: {}
        - name: fluent-bit-config
          configMap:
            name: fluent-bit-config-notification
