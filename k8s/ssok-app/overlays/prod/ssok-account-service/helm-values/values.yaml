replicaCount: 1

image:
  repository: kudong/ssok-account-service
  tag: "build-134"
  pullPolicy: IfNotPresent

service:
  type: ClusterIP
  name: web
  port: 80
  targetPort: 8080

notification:
  profile: "[PROD]"
  webhook-url: "https://discord.com/api/webhooks/1377886188312068146/eFtja7Ax7h84bD9z5CZhm7jligL1wDIRRLvQgr-UnxnACEUSkyI4Gm9NsenVFwnwKnLK"
  ssom-url: "http://ssom-backend-prod.ssom.svc.cluster.local:8080/api/alert/devops"

resources:
  requests:
    cpu: "500m"      # 최소 0.5 CPU 코어
    memory: "512Mi"  # 512MB
  limits:
    cpu: "1000m"     # 최대 1 CPU 코어
    memory: "1Gi"    # 1GB 

hpa:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80 # CPU 이용률 80% 이상시
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300 # 5분 대기, 30초 주기, 점진적 감소
      policies:
      - type: Percent
        value: 50
        periodSeconds: 30
    scaleUp:
      stabilizationWindowSeconds: 0 # 0초 대기, 15초 주기, 최대 증가
      policies:
      - type: Percent
        value: 100          # 현재 Pod 수의 100% 증가
        periodSeconds: 15   # 15초마다
      - type: Pods          
        value: 2            # 또는 2개씩 증가
        periodSeconds: 15   # 15초마다
      selectPolicy: Max # 정책 2개중 가장 큰것을 선택

applicationConfig:
  server:
    port: 8080
  chaos:
    monkey:
      enabled: true
  spring:
    profiles:
      active: chaos-monkey
    application:
      name: ssok-account-service
    cloud:
      kubernetes:
        config:
          enabled: true
          name: ssok-account-service
          namespace: ssok
          sources:
            - name: ssok-account-service
        secrets:
          enabled: false
        reload:
          enabled: true
        discovery:
          all-namespaces: false
        loadbalancer:
          mode: service
  management:
    endpoints:
      web:
        exposure:
          include: health,info,chaosmonkey,prometheus
    endpoint:
      health:
        show-details: always
      prometheus:
        enabled: true
      chaosmonkey:
        enabled: true
  health:
    kubernetes:
      enabled: false
  feign:
    client:
      config:
        default:
          connectTimeout: 20000
          readTimeout: 20000
          loggerLevel: full
    hystrix:
      command:
        default:
          execution:
            isolation:
              thread:
                timeoutInMilliseconds: 30000

fluentbit:
  fluentBitConf: |-
    [SERVICE]
        Flush         1
        Daemon        Off
        Log_Level     info
        Parsers_File  parsers.conf
        HTTP_Server   On
        HTTP_Listen   0.0.0.0
        HTTP_Port     2020

    [INPUT]
        Name              tail
        Path              /var/log/ssok-account-service.log
        Parser            json
        Tag               account.log
        Refresh_Interval 5
        Mem_Buf_Limit    10MB
        Skip_Long_Lines  On

    [OUTPUT]
        Name    forward
        Match   account.*
        Host    fluentd-aggregator.logging.svc.cluster.local
        Port    24224

  parsersConf: |-
    [PARSER]
        Name        json
        Format      json
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L%z

secrets:
  datasource:
    url: jdbc:postgresql://172.16.0.86:5432/ssokdb
    username: ssokuser
    password: ssokpw
  redis:
    host: 172.16.0.86
    port: "6379"
  external:
    openbankingService:
      url: http://172.16.1.194:8080
      apiKey: 6ee92f1d-e70e-470b-9f13-1b0822374728
    userService:
      url: http://ssok-user-service.ssok.svc.cluster.local