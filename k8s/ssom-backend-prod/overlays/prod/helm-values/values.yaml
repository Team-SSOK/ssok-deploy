# SSOM-BACKEND PROD 환경 설정

image:
  repository: kudong/ssom-backend-prod
  pullPolicy: IfNotPresent
  tag: "1.65"

notification:
  profile: "[PROD]"
  # 실제 Discord webhook URL로 변경 필요
  webhook-url: "https://discord.com/api/webhooks/1377886188312068146/eFtja7Ax7h84bD9z5CZhm7jligL1wDIRRLvQgr-UnxnACEUSkyI4Gm9NsenVFwnwKnLK"

# 리소스 요청량 대폭 감소 (클러스터 리소스 부족으로 인해)
#resources:
#  requests:
#    cpu: "100m"      # 0.1 CPU 코어
#    memory: "256Mi"  # 256MB
#  limits:
#    cpu: "500m"      # 0.5 CPU 코어
#    memory: "512Mi"  # 512MB

# HPA 비활성화 (Deployment 먼저 생성)
hpa:
  enabled: false

# 로깅 비활성화 (fluentbit 제거)
logging:
  enabled: false

ssom:
  config:
    # Prod 환경 특화 설정
    SPRING_PROFILES_ACTIVE: "prod"
    SPRING_JPA_PROPERTIES_HIBERNATE_SHOW_SQL: "false"  # Prod에서는 SQL 로깅 비활성화
    SPRING_JPA_SHOW_SQL: "false"
    
    # DB 연결 타임아웃 증가 (연결 문제 해결 시도)
    SPRING_DATASOURCE_HIKARI_CONNECTION_TIMEOUT: "60000"  # 20초 → 60초
    SPRING_DATASOURCE_HIKARI_VALIDATION_TIMEOUT: "10000"  # 3초 → 10초
    SPRING_DATASOURCE_HIKARI_LEAK_DETECTION_THRESHOLD: "120000"  # 60초 → 120초

    # OpenSearch 설정 (외부 서버 사용)
    OPENSEARCH_SCHEME: "http"
    OPENSEARCH_CONNECT_TIMEOUT: "10"
    OPENSEARCH_RESPONSE_TIMEOUT: "30"

    # Kafka 설정
    KAFKA_BOOTSTRAP_SERVERS: "ssok-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092"
    KAFKA_CONSUMER_GROUP: "ssom-alert-consumer-prod"
    KAFKA_LISTENER_CONCURRENCY: "10"

    # Alert Kafka 토픽 설정
    ALERT_CREATED_TOPIC: "alert-created-topic-prod"
    USER_ALERT_TOPIC: "user-alert-topic-prod"
    ALERT_DLQ_TOPIC: "alert-dlq-topic"
    ALERT_CREATED_PARTITIONS: "3"
    USER_ALERT_PARTITIONS: "10"
    KAFKA_REPLICATION_FACTOR: "2"
    KAFKA_RETENTION_MS: "604800000"
    ALERT_DLQ_PARTITIONS: "1"
    DLQ_RETENTION_MS: "2592000000"
    
  secrets:
    # 정확한 base64 인코딩된 값들 (aws db)
    SPRING_DATASOURCE_URL: amRiYzpteXNxbDovLzE3Mi4xNi4wLjg2OjMzMDcvc3NvbWRiP3NlcnZlclRpbWV6b25lPUFzaWEvU2VvdWwmdXNlTGVnYWN5RGF0ZXRpbWVDb2RlPWZhbHNl
    SPRING_DATASOURCE_USERNAME: c3NvbXVzZXI=
    SPRING_DATASOURCE_PASSWORD: c3NvbXB3
    
    # Redis 설정
    SPRING_DATA_REDIS_HOST: MTcyLjE2LjAuODY=
    SPRING_DATA_REDIS_PORT: NjM4MA==
    
    # JWT Secret (운영용 강력한 시크릿으로 변경 필요)
    JWT_SECRET: bXlTZWNyZXRLZXkxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkw
    
    # GitHub API 설정 (운영용 토큰으로 변경 필요)
    GITHUB_WEBHOOK_SECRET: c3NvbV9kZXZfd2ViaG9va19zZWNyZXRfMjAyNV9zZWN1cmVfa2V5X2FiYzEyM3h5eg==
    
    # LLM API URL
    LLM_API_URL: aHR0cDovL2t1ZG9uZy5rcjo1NTAzNg==
    
    # OpenSearch 설정 (외부 서버 - base64 인코딩)
    # 
    OPENSEARCH_HOST: b3BlbnNlYXJjaC1jbHVzdGVyLWNvb3JkLmxvZ2dpbmcuc3ZjLmNsdXN0ZXIubG9jYWw=
    OPENSEARCH_PORT: OTIwMA==
    OPENSEARCH_API_URL: b3BlbnNlYXJjaC1jbHVzdGVyLWNvb3JkLmxvZ2dpbmcuc3ZjLmNsdXN0ZXIubG9jYWw6OTIwMA==
