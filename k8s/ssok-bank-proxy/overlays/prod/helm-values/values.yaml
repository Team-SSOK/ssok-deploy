image:
  repository: kudong/ssok-bank-proxy
  pullPolicy: IfNotPresent
  tag: "1.14"

notification:
  profile: "[PROD]"
  webhook-url: aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4MjExNzgxOTI4MTU3NjExNi92dUFIVFVVb19qdmpIeExQTjFjTnRZR1RmZW0tVTBudzN2Y25ZUkVUT3YyU2s3d3p3VFAwQmROS3hnR1I5Z0pYcGhQcw==
  ssom-url: aHR0cDovL3Nzb20tYmFja2VuZC1wcm9kLnNzb20uc3ZjLmNsdXN0ZXIubG9jYWw6ODA4MC9hcGkvYWxlcnQvZGV2b3Bz
 
resources:
  requests:
    cpu: "500m"      # 최소 0.2 CPU 코어
    memory: "512Mi"  # 512MB
  limits:
    cpu: "1000m"     # 최대 1 CPU 코어
    memory: "1Gi"    # 1GB 

hpa:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80 # CPU 이용률 80% 이상시
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300 # 5분 대기, 30초 주기, 점진적 감소
      policies:
      - type: Percent
        value: 50
        periodSeconds: 30
    scaleUp:
      stabilizationWindowSeconds: 0 # 0초 대기, 15초 주기, 최대 증가
      policies:
      - type: Percent
        value: 100          # 현재 Pod 수의 100% 증가
        periodSeconds: 15   # 15초마다
      - type: Pods          
        value: 2            # 또는 2개씩 증가
        periodSeconds: 15   # 15초마다
      selectPolicy: Max # 정책 2개중 가장 큰것을 선택

proxy:
  config:
    SERVER_PORT: "8080"
    KAFKA_BOOTSTRAP_SERVERS: "ssok-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092"
    KAFKA_TRUSTED_PACKAGES: "kr.ssok.model"